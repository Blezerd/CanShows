# messages.properties
#
# Copyright (C) 2014 Universidad de Sevilla
# 
# The use of this project is hereby constrained to the conditions of the 
# TDG Licence, a copy of which you may download from 
# http://www.tdg-seville.info/License.html

typeMismatch.java.util.Date		= Invalid moment
typeMismatch.double				= Invalid amount


typeMismatch.lodge.price	= Invalid amount, must be a number.
typeMismatch.lodge.location.latitude= Invalid amount, must be a number.
typeMismatch.lodge.location.longitude =Invalid amount, must be a number.
typeMismatch.lodge.location.altitude =Invalid amount, must be a number.
typeMismatch.lodge.bedsAvailables = Invalid amount, must be a number.

typeMismatch.stage.length =Invalid amount, must be a number.

typeMismatch.stage.originLocation.latitude= Invalid amount, must be a number.
typeMismatch.stage.originLocation.longitude =Invalid amount, must be a number.
typeMismatch.stage.originLocation.altitude =Invalid amount, must be a number.

typeMismatch.stage.destinationLocation.latitude= Invalid amount, must be a number.
typeMismatch.stage.destinationLocation.longitude =Invalid amount, must be a number.
typeMismatch.stage.destinationLocation.altitude =Invalid amount, must be a number.


typeMismatch.stageJournal.assessment.lengthRating = Invalid amount, must be a number.
typeMismatch.stageJournal.assessment.difficultyRating = Invalid amount, must be a number.
typeMismatch.stageJournal.length =Invalid amount, must be a number.

typeMismatch.booking.assessmentLodge.locationRate = Invalid amount, must be a number.
typeMismatch.booking.assessmentLodge.roomRate = Invalid amount, must be a number.
typeMismatch.booking.assessmentLodge.priceRate = Invalid amount, must be a number.
typeMismatch.booking.assessmentLodge.serviceRate = Invalid amount, must be a number.


methodInvocation.double=must be double value
javax.validation.constraints.DecimalMax.message  = Too large (max = {value})
javax.validation.constraints.DecimalMin.message  = Too small (min = {value})
javax.validation.constraints.Digits.message      = Out of range ({integer}.{fraction})
javax.validation.constraints.Max.message         = Too large (max = {value})
javax.validation.constraints.Min.message         = Too small (min = {value})
javax.validation.constraints.Past.message        = Must be in the past
javax.validation.constraints.Future.message      = Must be in the future
javax.validation.constraints.Size.message        = Size must be from {min} to {max}

javax.validation.constraints.Pattern.message     = Does not match pattern 
misc.nada    = Nothing found.
javax.validation.constraints.AssertFalse.message = Must be false
javax.validation.constraints.AssertTrue.message  = Must be true
javax.validation.constraints.NotNull.message     = Cannot be null
javax.validation.constraints.Null.message        = Must be null

org.hibernate.validator.constraints.CreditCardNumber.message = Invalid credit card number
org.hibernate.validator.constraints.Email.message            = Invalid email
org.hibernate.validator.constraints.URL.message              = Invalid URL
org.hibernate.validator.constraints.Length.message           = Length must be from {min} to {max}
org.hibernate.validator.constraints.NotBlank.message         = Must not be blank
org.hibernate.validator.constraints.NotEmpty.message         = Must not be empty
org.hibernate.validator.constraints.Range.message            = Out of range ({min}-{max})
org.hibernate.validator.constraints.SafeHtml.message         = Insecure HTML
org.hibernate.validator.constraints.ScriptAssert.message     = "{script}" returns false

panic.text 		  = Sorry for the inconvenience.  The following exception was thrown and is not recoverable: 
panic.message 	  = Message
panic.stack.trace = Stack trace

